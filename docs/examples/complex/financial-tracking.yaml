# Financial Tracking System Example
# Demonstrates accounts, transactions, budgets, and financial reporting
# Shows currency handling, categorization, and complex financial automations

columns:
  id:
    type: integer
    sequence: true
    primary_key: true

  name:
    type: varchar
    size: 100

  money:
    type: numeric
    size: 15
    decimal: 2

  percentage:
    type: numeric
    size: 5
    decimal: 2

  currency_code:
    type: varchar
    size: 3
    # USD, EUR, GBP, etc.

tables:
  currencies:
    columns:
      currency_code:
        $ref: currency_code
        primary_key: true

      currency_name:
        $ref: name

      symbol:
        type: varchar
        size: 5
        # $, €, £, ¥, etc.

  account_types:
    columns:
      type_id:
        $ref: id

      type_name:
        $ref: name
        # checking, savings, credit_card, investment, etc.

      is_liability:
        type: boolean
        # true for credit cards, loans

  accounts:
    foreign_keys:
      type_fk:
        table: account_types
      currency_fk:
        table: currencies

    columns:
      account_id:
        $ref: id

      account_name:
        $ref: name

      type_fk:
        type: integer
        required: true

      currency_fk:
        $ref: currency_code
        required: true

      # Automation: sum of all transactions
      current_balance:
        $ref: money
        automation:
          type: SUM
          table: transactions
          foreign_key: account_fk
          column: amount

      # Automation: count transactions
      transaction_count:
        type: integer
        automation:
          type: COUNT
          table: transactions
          foreign_key: account_fk
          column: transaction_id

      # Automation: largest single transaction
      largest_transaction:
        $ref: money
        automation:
          type: MAX
          table: transactions
          foreign_key: account_fk
          column: amount

      # Automation: smallest single transaction
      smallest_transaction:
        $ref: money
        automation:
          type: MIN
          table: transactions
          foreign_key: account_fk
          column: amount

      # Automation: date of last transaction
      last_transaction_date:
        type: date
        automation:
          type: LATEST
          table: transactions
          foreign_key: account_fk
          column: transaction_date

      opened_at:
        type: date

  transaction_categories:
    foreign_keys:
      parent_fk:
        table: transaction_categories

    columns:
      category_id:
        $ref: id

      category_name:
        $ref: name
        # Food, Transportation, Utilities, etc.

      parent_fk:
        type: integer
        required: false

      is_income:
        type: boolean
        # true for salary, investment returns, etc.

      # Automation: total spent in this category
      total_amount:
        $ref: money
        automation:
          type: SUM
          table: transactions
          foreign_key: category_fk
          column: amount

      # Automation: count transactions in category
      transaction_count:
        type: integer
        automation:
          type: COUNT
          table: transactions
          foreign_key: category_fk
          column: transaction_id

      # Automation: average transaction amount
      avg_amount:
        $ref: money
        automation:
          type: AVG
          table: transactions
          foreign_key: category_fk
          column: amount

  transactions:
    foreign_keys:
      account_fk:
        table: accounts
      category_fk:
        table: transaction_categories
      transfer_account_fk:
        table: accounts  # For transfers between accounts

    columns:
      transaction_id:
        $ref: id

      account_fk:
        type: integer
        required: true

      category_fk:
        type: integer
        required: false

      # For transfers, this points to the destination account
      transfer_account_fk:
        type: integer
        required: false

      amount:
        $ref: money
        # Positive for income/deposits, negative for expenses

      description:
        type: varchar
        size: 200

      transaction_date:
        type: date

      # For tracking check numbers, reference numbers, etc.
      reference_number:
        type: varchar
        size: 50

      is_cleared:
        type: boolean
        # Whether transaction has cleared the bank

      created_at:
        type: timestamp

  budgets:
    foreign_keys:
      category_fk:
        table: transaction_categories

    columns:
      budget_id:
        $ref: id

      budget_name:
        $ref: name

      category_fk:
        type: integer
        required: true

      budget_amount:
        $ref: money

      budget_period:
        type: varchar
        size: 20
        # monthly, quarterly, yearly

      start_date:
        type: date

      end_date:
        type: date

      # Automation: actual spending in budget period
      spent_amount:
        $ref: money
        automation:
          type: SUM
          table: transactions
          foreign_key: category_fk
          column: amount
          # Would need date range conditions in real implementation

      # Automation: percentage of budget used
      percent_used:
        $ref: percentage
        # Calculated as (spent_amount / budget_amount) * 100

  recurring_transactions:
    foreign_keys:
      account_fk:
        table: accounts
      category_fk:
        table: transaction_categories

    columns:
      recurring_id:
        $ref: id

      account_fk:
        type: integer
        required: true

      category_fk:
        type: integer
        required: false

      amount:
        $ref: money

      description:
        type: varchar
        size: 200

      frequency:
        type: varchar
        size: 20
        # daily, weekly, monthly, yearly

      next_due_date:
        type: date

      is_active:
        type: boolean

      # Automation: count of transactions generated
      execution_count:
        type: integer
        automation:
          type: COUNT
          table: transactions
          foreign_key: recurring_fk
          column: transaction_id

  # Link transactions back to their recurring template
  recurring_fk:
    # This would be added to transactions table
    type: integer
    required: false
    # References recurring_transactions.recurring_id

# Financial reporting automation:
#
# 1. Real-time account balances:
#    - Every transaction automatically updates account.current_balance
#    - No need for complex balance calculation queries
#
# 2. Category spending analysis:
#    - categories.total_amount shows lifetime spending
#    - categories.avg_amount shows spending patterns
#    - categories.transaction_count shows frequency
#
# 3. Budget tracking:
#    - budgets.spent_amount updates with each transaction
#    - budgets.percent_used shows budget utilization
#    - Easy to identify over-budget categories
#
# 4. Account analysis:
#    - largest/smallest_transaction for outlier detection
#    - last_transaction_date for account activity monitoring
#    - transaction_count for account usage patterns
#
# 5. Multi-currency support:
#    - Each account has its own currency
#    - Transactions store amounts in account currency
#    - Cross-currency transfers would need exchange rate handling
#
# This system provides real-time financial insights without complex reporting queries