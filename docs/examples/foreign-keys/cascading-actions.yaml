# Cascading Actions Example
# Demonstrates foreign keys with CASCADE, RESTRICT, SET NULL actions

columns:
  id:
    type: integer
    sequence: true
    primary_key: true

  name:
    type: varchar
    size: 100

tables:
  departments:
    columns:
      department_id:
        $ref: id

      department_name:
        $ref: name

  employees:
    foreign_keys:
      department_fk:
        table: departments
        # When department is deleted, SET NULL on employees
        on_delete: SET NULL
        # When department ID changes, CASCADE the change
        on_update: CASCADE

    columns:
      employee_id:
        $ref: id

      employee_name:
        $ref: name

      department_fk:
        type: integer
        required: false  # Can be NULL due to SET NULL

  orders:
    foreign_keys:
      employee_fk:
        table: employees
        # When employee is deleted, don't allow if they have orders
        on_delete: RESTRICT
        on_update: CASCADE

    columns:
      order_id:
        $ref: id

      order_date:
        type: date

      employee_fk:
        type: integer
        required: true

  order_items:
    foreign_keys:
      order_fk:
        table: orders
        # When order is deleted, delete all its items
        on_delete: CASCADE
        on_update: CASCADE

    columns:
      item_id:
        $ref: id

      order_fk:
        type: integer
        required: true

      product_name:
        $ref: name

      quantity:
        type: integer

# Cascading Action Types:
#
# CASCADE:
#   - DELETE: When parent is deleted, delete all children
#   - UPDATE: When parent PK changes, update all child FKs
#
# RESTRICT (default):
#   - DELETE: Prevent parent deletion if children exist
#   - UPDATE: Prevent parent PK change if children exist
#
# SET NULL:
#   - DELETE: When parent is deleted, set child FK to NULL
#   - UPDATE: When parent PK changes, set child FK to NULL
#
# Examples of behavior:
# 1. DELETE FROM departments WHERE department_id = 1
#    → All employees with department_fk = 1 get department_fk = NULL
#
# 2. DELETE FROM employees WHERE employee_id = 5
#    → Fails if employee 5 has any orders (RESTRICT)
#
# 3. DELETE FROM orders WHERE order_id = 100
#    → All order_items with order_fk = 100 are also deleted (CASCADE)