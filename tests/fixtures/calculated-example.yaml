# GenLogic Calculated Columns Example
# Demonstrates the new "calculated" column feature

tables:
  # Simple arithmetic calculations
  orders:
    columns:
      order_id: { type: integer, primary_key: true, sequence: true }
      price: { type: numeric, size: 10, decimal: 2 }
      quantity: { type: integer }
      # Calculated column: automatically computed on INSERT/UPDATE
      subtotal:
        type: numeric
        size: 10
        decimal: 2
        calculated: "price * quantity"
      tax_rate: { type: numeric, size: 5, decimal: 4 }
      # Calculated column depending on another calculated column
      tax_amount:
        type: numeric
        size: 10
        decimal: 2
        calculated: "subtotal * tax_rate"
      # Final total depends on two calculated columns
      total:
        type: numeric
        size: 10
        decimal: 2
        calculated: "subtotal + tax_amount"

  # CASE expressions in calculated columns
  products:
    columns:
      product_id: { type: integer, primary_key: true, sequence: true }
      name: { type: text }
      cost: { type: numeric, size: 10, decimal: 2 }
      markup_percent: { type: numeric, size: 5, decimal: 2 }
      # Calculated price based on cost and markup
      selling_price:
        type: numeric
        size: 10
        decimal: 2
        calculated: "cost * (1 + markup_percent / 100)"
      # Status based on selling price using CASE expression
      price_tier:
        type: text
        calculated: "case when selling_price < 50 then 'budget' when selling_price < 200 then 'standard' else 'premium' end"

  # String concatenation
  employees:
    columns:
      employee_id: { type: integer, primary_key: true, sequence: true }
      first_name: { type: text }
      last_name: { type: text }
      # Calculated full name
      full_name:
        type: text
        calculated: "first_name || ' ' || last_name"
      hourly_rate: { type: numeric, size: 10, decimal: 2 }
      hours_worked: { type: numeric, size: 10, decimal: 2 }
      # Weekly pay calculation
      weekly_pay:
        type: numeric
        size: 10
        decimal: 2
        calculated: "hourly_rate * hours_worked"

# Features Demonstrated:
# 1. Simple arithmetic: price * quantity
# 2. Dependent calculations: subtotal -> tax_amount -> total
# 3. CASE expressions: conditional logic based on values
# 4. String operations: concatenation with ||
# 5. NULL safety: use COALESCE() for NULL handling
# 6. Automatic recalculation on INSERT and UPDATE
# 7. Cycle detection: prevents circular dependencies
# 8. Mutual exclusion: cannot have both "calculated" and "automation"